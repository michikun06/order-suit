{"version":3,"file":"FormattedMessage.esm.js","sources":["../../../../src/components/BuildLogs/FormattedMessage.tsx"],"sourcesContent":["import * as React from \"react\"\nimport Markdown from \"markdown-to-jsx\"\n\n// Check for \"1 |\" presence to create a code block\n// Stores every last index owning a \" |\" string\n// to close the code block at the good position\n//\n// Example code block:\n// 15 |           frontmatter {\n// 16 |             date(formatString: $invaludVar)\n//    |                                ^\n//\nconst formatCodeBlocks = (stringPartsByLines: string[]) => {\n  let lastIndexFound = -1\n  let codeBlockOpen = false\n\n  const nextLines = stringPartsByLines.map((str, index) => {\n    if (str.match(/(\\s|\\t)*\\d+\\s\\|/) || str.match(/(\\s|\\t)*\\|(\\s|\\t)*\\^/)) {\n      if (codeBlockOpen) {\n        lastIndexFound = index\n      } else {\n        codeBlockOpen = true\n        return \"```\" + str\n      }\n    } else if (codeBlockOpen) {\n      // Close the current code block if the line doesn't match anymore\n      codeBlockOpen = false\n      return \"```\" + str\n    }\n\n    return str\n  })\n\n  if (lastIndexFound > -1) {\n    nextLines[lastIndexFound] = nextLines[lastIndexFound] + \"```\"\n  }\n\n  return nextLines.join(\"\\n\")\n}\n\nexport interface FormattedMessageProps {\n  rawMessage: string\n}\n\nexport const FormattedMessage = ({ rawMessage }: FormattedMessageProps) => {\n  const stringPartsByLines = rawMessage.split(\"\\n\")\n  const message = formatCodeBlocks(stringPartsByLines)\n\n  // Markdown formatter treats strings without line break as spans, we need to wrap them in a\n  // <div><p></p></div> to keep the same structure as a multi line message.\n  const isOneLine = stringPartsByLines.length === 1\n  if (isOneLine) {\n    return (\n      <div>\n        <p>\n          <Markdown>{message}</Markdown>\n        </p>\n      </div>\n    )\n  }\n\n  const firstLine = stringPartsByLines[0]\n\n  // Line breaking to create a title at the first \":\" met\n  if (firstLine.endsWith(\":\")) {\n    return <Markdown>{message.replace(`:`, `:\\n\\n`)}</Markdown>\n  }\n\n  // Line breaking to create a title when the first line ends with \".\"\n  if (firstLine.endsWith(\".\")) {\n    const [_, ...actual] = stringPartsByLines\n    const newFirstLine = firstLine.substring(0, firstLine.length - 1)\n    const nextMessage = [`${newFirstLine}.\\n\\n`, ...actual].join(\"\\n\")\n\n    return <Markdown>{nextMessage}</Markdown>\n  }\n\n  return <Markdown>{message}</Markdown>\n}\n"],"names":["formatCodeBlocks","stringPartsByLines","lastIndexFound","codeBlockOpen","nextLines","map","str","index","match","join","FormattedMessage","rawMessage","split","message","isOneLine","length","React.createElement","firstLine","endsWith","replace","_","actual","newFirstLine","substring","nextMessage"],"mappings":";;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,kBAAD,EAAkC;AACzD,MAAIC,cAAc,GAAG,CAAC,CAAtB;AACA,MAAIC,aAAa,GAAG,KAApB;AAEA,MAAMC,SAAS,GAAGH,kBAAkB,CAACI,GAAnB,CAAuB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACvD,QAAID,GAAG,CAACE,KAAJ,CAAU,iBAAV,KAAgCF,GAAG,CAACE,KAAJ,CAAU,sBAAV,CAApC,EAAuE;AACrE,UAAIL,aAAJ,EAAmB;AACjBD,QAAAA,cAAc,GAAGK,KAAjB;AACD,OAFD,MAEO;AACLJ,QAAAA,aAAa,GAAG,IAAhB;AACA,eAAO,QAAQG,GAAf;AACD;AACF,KAPD,MAOO,IAAIH,aAAJ,EAAmB;AACxB;AACAA,MAAAA,aAAa,GAAG,KAAhB;AACA,aAAO,QAAQG,GAAf;AACD;;AAED,WAAOA,GAAP;AACD,GAfiB,CAAlB;;AAiBA,MAAIJ,cAAc,GAAG,CAAC,CAAtB,EAAyB;AACvBE,IAAAA,SAAS,CAACF,cAAD,CAAT,GAA4BE,SAAS,CAACF,cAAD,CAAT,GAA4B,KAAxD;AACD;;AAED,SAAOE,SAAS,CAACK,IAAV,CAAe,IAAf,CAAP;AACD,CA1BD;;IAgCaC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA2C;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;AACzE,MAAMV,kBAAkB,GAAGU,UAAU,CAACC,KAAX,CAAiB,IAAjB,CAA3B;AACA,MAAMC,OAAO,GAAGb,gBAAgB,CAACC,kBAAD,CAAhC,CAFyE;AAKzE;;AACA,MAAMa,SAAS,GAAGb,kBAAkB,CAACc,MAAnB,KAA8B,CAAhD;;AACA,MAAID,SAAJ,EAAe;AACb,wBACEE,wCACEA,sCACEA,cAAC,QAAD,QAAWH,OAAX,CADF,CADF,CADF;AAOD;;AAED,MAAMI,SAAS,GAAGhB,kBAAkB,CAAC,CAAD,CAApC,CAjByE;;AAoBzE,MAAIgB,SAAS,CAACC,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAC3B,wBAAOF,cAAC,QAAD,QAAWH,OAAO,CAACM,OAAR,cAAX,CAAP;AACD,GAtBwE;;;AAyBzE,MAAIF,SAAS,CAACC,QAAV,CAAmB,GAAnB,CAAJ,EAA6B;AAAA,uCACJjB,kBADI;AAAA,QACpBmB,CADoB;AAAA,QACdC,MADc;;AAE3B,QAAMC,YAAY,GAAGL,SAAS,CAACM,SAAV,CAAoB,CAApB,EAAuBN,SAAS,CAACF,MAAV,GAAmB,CAA1C,CAArB;AACA,QAAMS,WAAW,GAAG,WAAIF,YAAJ,sCAA4BD,MAA5B,GAAoCZ,IAApC,CAAyC,IAAzC,CAApB;AAEA,wBAAOO,cAAC,QAAD,QAAWQ,WAAX,CAAP;AACD;;AAED,sBAAOR,cAAC,QAAD,QAAWH,OAAX,CAAP;AACD;;AArCCF,EAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;"}